# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B --update-snapshots clean package --file pom.xml
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: mihaphoenix/telegram_bot:latest
        
    - name: Update docker-compose.yml on server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_KEY }}
        source: "docker-compose.yml, start.sh"
        target: "telegram_bot"
    - name: Restart conteiners with latest images
      uses: appleboy/ssh-action@v0.1.4
      env:
          BOT_USERNAME: ${{ secrets.ENV_BOT_USERNAME }}
          BOT_TOKEN: ${{ secrets.ENV_BOT_TOKEN }}
          BOT_DB_USERNAME: ${{ secrets.ENV_BOT_DB_USERNAME }}
          BOT_DB_PASSWORD: ${{ secrets.ENV_BOT_DB_PASSWORD }}
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_KEY }}
        envs: BOT_USERNAME, BOT_TOKEN, BOT_DB_USERNAME, BOT_DB_PASSWORD
        script: |
          cd telegram_bot
          export $BOT_USERNAME
          export $BOT_TOKEN
          export $BOT_DB_USERNAME
          export $BOT_DB_PASSWORD
          bash start.sh
